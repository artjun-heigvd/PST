scan(../cpus.txt)
scan(cpus.txt)
scan("cpus.txt")
?scan
x <- scan("cpus.txt")
x
x
x
x
x
rm x
rm(x)
x
library(knitr)
install.packages('knitr', dependencies = TRUE)
cpus
cpus
cpus <-scan("cpus.txt")
cpus
examen <- read.table("examen.txt")
View(examen)
cpus <- read.table("cpus.txt")
scan
examen <- read.table("examen.txt")
View(cpus)
cpus
examen <- read.table("examen.txt")
cpus.rm
rm(cpus)
rm(examen)
examen <- scan("examen.txt")
cpus
examen <- read.table("examen.txt")
cpus <- scan("cpus.txt")
cpus[12]
cpus[3:19]
cpus[cpus>190]
examen$note
examen <- scan("examen.txt")
examen <- scan("examen.txt")
?scan
examen$note
examen$V2
?read.table
examen <- read.table("examen.txt", TRUE)
examen$note
examen$note[7]
mesdonnees<-c(2.9, 3.4, 3.4, 3.7, 3.7, 2.8, 2.1, 2.5, 2.6)
mesdonnees
couleurs<-c("bleu", "vert", "blanc", "noir", "jaune")
mesdonnees[-c(3:5)]
ls()
library(knitr)
library(knitr)
install.packages("rmarkdown")
library(rmarkdown)
install.packages("tidyverse")
install.packages("tidyverse")
library(backports)
detach("package:backports", unload = TRUE)
library(backports)
detach("package:backports", unload = TRUE)
install.packages("tidyverse")
install.packages("palmerpenguins")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("quarto")
cpus <- scan("../datas/cpus.txt")
examen <- read.table("../datas/examen.txt", header = TRUE)
mesdonnees <- c(2.9, 3.4, 3.4, 3.7, 3.7, 2.8, 2.1, 2.5, 2.6)
couleurs<-c("bleu", "vert", "blanc", "noir", "jaune")
ls()
stem(cpus)
par(mfrow=c(1,2), pty="s")
hist(cpus, xlab="performance relative", ylab="fréquence", main="",
col="darkslategray4")
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T)
rug(cpus)
par(mfrow=c(1,1))
meanCpus <- mean(cpus)
medianCpus <- median(cpus)
meanCpus
medianCpus
n.cpus<-table(cpus)
as.numeric(names(n.cpus)[n.cpus==max(n.cpus)])
summary(cpus)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=false)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=FALSE)
par(mfrow=c(1,2), pty="s")
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=FALSE)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=FALSE)
rug(cpus)
par(mfrow=c(1,2), pty="s")
hist(cpus, xlab="performance relative", ylab="fréquence", main="",
col="darkslategray4")
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
rug(cpus)
par(mfrow=c(1,1))
par(mfrow=c(1,2), pty="s")
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
rug(cpus)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
rug(cpus)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
?boxplot
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=T)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
?sd
sd(cpus)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
cpus <- scan("../datas/cpus.txt")
examen <- read.table("../datas/examen.txt", header = TRUE)
mesdonnees <- c(2.9, 3.4, 3.4, 3.7, 3.7, 2.8, 2.1, 2.5, 2.6)
couleurs<-c("bleu", "vert", "blanc", "noir", "jaune")
ls()
stem(cpus)
par(mfrow=c(1,2), pty="s")
hist(cpus, xlab="performance relative", ylab="fréquence", main="",
col="darkslategray4")
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T)
rug(cpus)
par(mfrow=c(1,1))
meanCpus <- mean(cpus)
medianCpus <- median(cpus)
meanCpus
medianCpus
n.cpus<-table(cpus)
as.numeric(names(n.cpus)[n.cpus==max(n.cpus)])
summary(cpus)
boxplot(sd(cpus), xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
sd(cpus)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
cpus_wout[!cpus %in% c(510, 915, 185, 370)]
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
cpus_wout <- cpus[!cpus %in% c(510, 915, 185, 370)]
sd(cpus)
sd(cpus_wout)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
cpus_wout <- cpus[!cpus %in% c(510, 915, 185, 370)]
cpus_wout
sd(cpus)
sd(cpus_wout)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
cpus_wout <- cpus[!cpus %in% c(510, 915, 185, 370)]
sd(cpus)
sd(cpus_wout)
boxplot(cpus, xlab="performance relative", col="darkslategray4", horizontal=T, plot=F)
cpus_wout <- cpus[!cpus %in% c(510, 915, 185, 370)]
setdiff(cpus, cpus_wout)
sd(cpus)
sd(cpus_wout)
lblue<-"#528B8B"
par(pty="s")
boxplot(note~groupe, data=examen, ylim=c(1,6), xlab="groupe",
varwidth=T, col=lblue, main="examen")
abline(h=4, lty=2)
?boxplot
?rug
?par
lblue<-"#528B8B"
par(pty="s")
boxplot(note~groupe, data=examen, ylim=c(1,6), xlab="groupe",
varwidth=T, col=lblue, main="examen")
examen$groupe
abline(h=4, lty=2)
lblue<-"#528B8B"
par(pty="s")
boxplot(note~groupe, data=examen, ylim=c(1,6), xlab="groupe",
varwidth=T, col=lblue, main="examen")
examen$groupe[A]
lblue<-"#528B8B"
par(pty="s")
boxplot(note~groupe, data=examen, ylim=c(1,6), xlab="groupe",
varwidth=T, col=lblue, main="examen")
examen$groupe["A"]
abline(h=4, lty=2)
lblue<-"#528B8B"
par(pty="s")
boxplot(note~groupe, data=examen, ylim=c(1,6), xlab="groupe",
varwidth=T, col=lblue, main="examen")
examen$note[groupe = A]
lblue<-"#528B8B"
par(pty="s")
note.A<-split(examen$note, examen$groupe)$A
note.B<-split(examen$note, examen$groupe)$B
boxplot(note~groupe, data=examen, ylim=c(1,6), xlab="groupe",
varwidth=T, col=lblue, main="examen")
rug(note.A, side=2)
rug(note.B, side=4)
abline(h=4, lty=2)
?by
by(note.A, note.B, sd)
by(examen, examen$groupe, sd)
by(examen$note, examen$groupe, sd)
by(examen$note, list(examen$groupe), sd)
library(arules)
library(arules)
library(ggplot2)
library(ggplot2)
data("AdultUCI")
str(dframe)
data("AdultUCI")
dframe<-AdultUCI[, c("education", "hours-per-week")]
colnames(dframe)<-c("education", "hours_per_week")
str(dframe)
```{r}
ggplot(dframe, aes(x=hours_per_week, y=education)) +
geom_point(colour="lightblue", alpha=0.1, position="jitter") +
geom_boxplot(outlier.size=0, alpha=0.2)
dim(AdultUCI)
nrows<-nrow(AdultUCI)
n.missing<-rowSums(is.na(AdultUCI))
sum(n.missing>0)/nrows
nx<-by(dframe$hours_per_week, dframe$education, max, na.rm=T)
nx
max(nx)
names(nx)[nx==max(nx)]
max(nx)
names(nx[nx==max(nx)])
max(nx)
names(nx)[nx==max(nx)]
nsd <- by(frame$hours_per_week, dframe$education, sd, na.rm=T)
nsd <- by(frame$hours_per_week, dframe$education, sd, na.rm=T)
nsd <- by(dframe$hours_per_week, dframe$education, sd, na.rm=T)
nsd
nsd <- by(dframe$hours_per_week, dframe$education, sd, na.rm=T)
names(nsd)[nsd==min(nsd)]
niqr<-by(dframe$hours_per_week, dframe$education, IQR, na.rm=T)
names(niqr)[niqr==min(miqr)]
niqr<-by(dframe$hours_per_week, dframe$education, IQR, na.rm=T)
names(niqr)[niqr==min(niqr)]
pCol <- c('#057076', '#ff8301', '#bf5ccb')
plot.iris<-ggplot(iris, aes(x=Petal.Length, y=Petal.Width, col=Species)) +
scale_color_manual(values=pCol) +
scale_x_continuous(breaks=seq(0.5, 7.5, by=1), limits=c(0.5, 7.5)) +
scale_y_continuous(breaks=seq(-0.5, 3, by=0.5), limits=c(-0.5, 3)) +
labs(title="Edgar Anderson's Iris Data",
x="Petal Length",
y="Petal Width") +
theme(plot.title=element_text(size=12, hjust=.5),
axis.title=element_text(size=10, vjust=-2),
axis.text=element_text(size=10, vjust=-2)) +
geom_point(aes(color=Species), alpha=.6, size=3) +
theme_minimal()
library(ggplot2)
library(ggplot2)
pCol <- c('#057076', '#ff8301', '#bf5ccb')
plot.iris<-ggplot(iris, aes(x=Petal.Length, y=Petal.Width, col=Species)) +
scale_color_manual(values=pCol) +
scale_x_continuous(breaks=seq(0.5, 7.5, by=1), limits=c(0.5, 7.5)) +
scale_y_continuous(breaks=seq(-0.5, 3, by=0.5), limits=c(-0.5, 3)) +
labs(title="Edgar Anderson's Iris Data",
x="Petal Length",
y="Petal Width") +
theme(plot.title=element_text(size=12, hjust=.5),
axis.title=element_text(size=10, vjust=-2),
axis.text=element_text(size=10, vjust=-2)) +
geom_point(aes(color=Species), alpha=.6, size=3) +
theme_minimal()
plot.iris +
ggforce::geom_mark_ellipse(
aes(fill=Species, label=Species),
alpha=.15, show.legend=FALSE
)
?cor
cor(Petal.length, Petal.Width)
cor(iris$Petal.Length, iris$Petal.Width)
library(gganimate)
anim<-plot.iris+
transition_states(Species,
transition_length = 2,
state_length = 1)
anim
library(reticulate)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
library(arules)
library(arules)
library(arules)
data("AdultUCI")
dframe<-AdultUCI[, c("education", "hours-per-week")]
colnames(dframe)<-c("education", "hours_per_week")
str(dframe)
cpus
examen
n.cpus<-table(cpus)
as.numeric(names(n.cpus)[n.cpus==max(n.cpus)])
#| label: fig-densite
#| fig-cap: Diagramme de densité en parallèle.
#| fig.show: asis
#| warning: false
#| echo: false
library(tidyverse)
library(showtext)
## Loading Google fonts (https://fonts.google.com/)
font_add_google("Schoolbell", "bell")
showtext_auto()
df_notes_stats <- examen %>%
filter(!is.na(note)) %>%
group_by(groupe) %>%
mutate(
n = n(),
median = median(note),
min = min(note),
max = max(note)
) %>%
ungroup() %>%
mutate(note_num = as.numeric(fct_rev(groupe)))
p2 <-
ggplot(df_notes_stats, aes(note, note_num, color = groupe)) +
stat_summary(
geom = "linerange",
fun.min = function(x) -Inf,
fun.max = function(x) median(x, na.rm = TRUE),
linetype = "dotted",
orientation = "y",
linewidth = .7
) +
geom_point(
aes(y = note_num - .15),
shape = "|",
size = 5,
alpha = .33
) +
ggdist::stat_halfeye(
aes(
y = note_num,
color = groupe,
fill = after_scale(colorspace::lighten(color, .5))
),
shape = 18,
point_size = 3,
interval_size = 1.8,
adjust = .5,
.width = c(0, 1)
) +
geom_text(
aes(x = median, label = format(round(median, 2), nsmall = 2)),
stat = "unique",
color = "white",
family = "bell",
fontface = "bold",
size = 3.4,
nudge_y = .15
) +
geom_text(
aes(x = max, label = glue::glue("n = {n}")),
stat = "unique",
family = "bell",
fontface = "bold",
size = 3.5,
hjust = 0,
nudge_x = .01,
nudge_y = .02
) +
coord_cartesian(clip = "off", expand = FALSE) +
scale_x_continuous(
limits = c(1, 6),
breaks = seq(1, 6, by = .5)
) +
scale_y_continuous(
limits = c(.55, NA),
breaks = 1:2,
labels = c("groupe B", "groupe A")
) +
scale_color_manual(values = c("#3d6721", "#a86826"), guide = "none") +
scale_fill_manual(values = c("#3d6721", "#a86826"), guide = "none") +
labs(
x = "note",
y = NULL,
subtitle = "Notes à l'examen de fin d'unité",
caption = "Données: HEIG-VD"
) +
theme_bw()
print(p2)
library(gt)
